(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{431:function(a,t,s){a.exports=s.p+"assets/img/RDBMSflow.9f678a67.png"},432:function(a,t,s){a.exports=s.p+"assets/img/ESflow.d4596412.png"},488:function(a,t,s){"use strict";s.r(t);var e=s(65),r=Object(e.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"elasticsearch"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#elasticsearch"}},[a._v("#")]),a._v(" ELasticsearch")]),a._v(" "),e("p",[a._v("📕 "),e("strong",[a._v("Chapter Objectives")])]),a._v(" "),e("ul",[e("li",[a._v("ELasticsearch 更多基礎知識")]),a._v(" "),e("li",[a._v("如同進行正規球賽前要先熟悉規則，使用 ELasticsearch 前基本相關名詞也需要略知一二")]),a._v(" "),e("li",[a._v("由關聯型數據庫的概念切入 Elasticsearch 加速理解速度")]),a._v(" "),e("li",[a._v("Elasticsearch = ES(縮寫)")])]),a._v(" "),e("p",[a._v("📘 "),e("strong",[a._v("Reference")])]),a._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://www.elastic.co/elasticsearch/",target:"_blank",rel:"noopener noreferrer"}},[a._v("官網"),e("OutboundLink")],1)]),a._v(" "),e("li",[e("a",{attrs:{href:"https://www.elastic.co/blog/what-is-an-elasticsearch-index",target:"_blank",rel:"noopener noreferrer"}},[a._v("What is an Elasticsearch Index?(2013)"),e("OutboundLink")],1)])]),a._v(" "),e("h2",{attrs:{id:"more-about-elasticsearch"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#more-about-elasticsearch"}},[a._v("#")]),a._v(" More About ELasticsearch")]),a._v(" "),e("p",[a._v("ELasticsearch 有著 Scalability(可擴展) 與 Near real-time search(接近即時搜尋) 的特性，"),e("br"),a._v("\n同時也提供了高可用(high availability)的集群架構，"),e("br"),a._v("\nELasticsearch 想解決的核心問題就是在數據量大的狀況下也能保有搜尋速度，"),e("br"),a._v("\n當初作者 Shay Banon 在設計的時候，一開始就是朝向分布式部屬的面相開發 ELasticsearch"),e("br"),a._v("\nELasticsearch 核心要素有三個:")]),a._v(" "),e("ul",[e("li",[e("font",{attrs:{color:"#63C5DA",size:"4"}},[e("strong",[a._v("Data in : documents and indices")])])],1),a._v(" "),e("li",[e("font",{attrs:{color:"#63C5DA",size:"4"}},[e("strong",[a._v("Information out : search and analyze")])])],1),a._v(" "),e("li",[e("font",{attrs:{color:"#63C5DA",size:"4"}},[e("strong",[a._v("Scalability and resilience")])])],1)]),a._v(" "),e("p"),a._v(" "),e("ul",[e("li",[e("p",[a._v("📓 關於系統設計知識補充")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("分散式系統設計準則 CAP")]),a._v(" "),e("ul",[e("li",[a._v("Consistency (一致性)")]),a._v(" "),e("li",[a._v("Availability (可用性)")]),a._v(" "),e("li",[a._v("Partition Tolerance (分區容忍性)")])]),a._v(" "),e("p",[a._v("📝 一般來說一個分散式架構下，三種特性中只能滿足兩種，"),e("br"),a._v("\n      拿CAP理論對比資料處理也會有以下三種特性:")])]),a._v(" "),e("li",[e("p",[a._v("資料處理系統設計")]),a._v(" "),e("ul",[e("li",[a._v("數據量龐大")]),a._v(" "),e("li",[a._v("近即時處理")]),a._v(" "),e("li",[a._v("資料準確性")])]),a._v(" "),e("p",[a._v("📝 同理，在資料處理上好像也有類似的概念(之前看到的，找不到原文了...)，"),e("br"),a._v("\n      而 Elasticsearch 當然是做了某些取捨，使用上請依自身情況把握")]),a._v(" "),e("ul",[e("li",[a._v("Elasticsearch 捨棄的是資料準確性，不過在某些數據量巨大的應用場景下，已經不會在乎那一點點資料錯誤了")]),a._v(" "),e("li",[a._v("若要滿足數據量巨大與資料準確性兩個因素，可以使用 Hadoop 或 HBase ...來處理，但就不可能 Realtime 了")]),a._v(" "),e("li",[a._v("資料量小的情況下，什麼!你說資料量小的情況，那沒事了")])])])])])]),a._v(" "),e("h2",{attrs:{id:"rdbms-vs-elasticsearch"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rdbms-vs-elasticsearch"}},[a._v("#")]),a._v(" RDBMS vs. Elasticsearch")]),a._v(" "),e("p",[a._v("要瞭解 Elasticsearch 可以先用 RDBMS 的概念來對比會比較好理解，但必須"),e("br"),a._v(" "),e("font",{attrs:{color:"#FF0000",size:"4"}},[a._v("注意只是拿使用概念來類比，並非 Elasticsearch 本身設計是依 RDBMS 的邏輯開發，兩者在本質上是天差地別")]),e("br"),a._v("\n以下是以 RDBMS 的方式理解 Elasticsearch :"),e("br"),a._v(" "),e("br"),a._v("\n📓  Type 這個概念已經在新版本中移除，"),e("br"),a._v("\n      而在 Type 7.x 版本中已經被定義為預設的 _doc，"),e("br"),a._v("\n      因為在 Elasticsearch 中一切皆是索引，不需要再額外劃分一層 Type 來分類，於是被當成過度設計而棄用"),e("br")],1),a._v(" "),e("table",[e("thead",[e("tr",[e("th",[a._v("RDBMS    ")]),a._v(" "),e("th",[a._v("Elasticsearch  ")])])]),a._v(" "),e("tbody",[e("tr",[e("td",[a._v("Database")]),a._v(" "),e("td",[a._v("Index")])]),a._v(" "),e("tr",[e("td",[e("s",[a._v("Table")])]),a._v(" "),e("td",[e("s",[a._v("Type")])])]),a._v(" "),e("tr",[e("td",[a._v("Row")]),a._v(" "),e("td",[a._v("Document")])]),a._v(" "),e("tr",[e("td",[a._v("Column")]),a._v(" "),e("td",[a._v("Fields")])]),a._v(" "),e("tr",[e("td",[a._v("Schema")]),a._v(" "),e("td",[a._v("Mapping")])]),a._v(" "),e("tr",[e("td",[a._v("SQL")]),a._v(" "),e("td",[a._v("Query DSL")])])])]),a._v(" "),e("p"),a._v(" "),e("p",[a._v('用最簡單的方式，建立"儲存資料的容器"到"將資料儲存到實體位置"的實用角度上來切入 :')]),a._v(" "),e("ul",[e("li",[e("p",[a._v("RDBMS")]),a._v(" "),e("ul",[e("li",[a._v("建資料庫")]),a._v(" "),e("li",[a._v("建資料表")]),a._v(" "),e("li",[a._v("設計欄位")]),a._v(" "),e("li",[a._v("插入資料")])]),a._v(" "),e("p",[e("img",{attrs:{src:s(431),alt:"RDBMSflow"}})])]),a._v(" "),e("li",[e("p",[a._v("Elasticsearch")]),a._v(" "),e("ul",[e("li",[a._v("建立索引 (Index)")]),a._v(" "),e("li",[a._v("設計映射 (Mapping)，此步驟也不一定要有")]),a._v(" "),e("li",[a._v("插入文件 (Document)")])]),a._v(" "),e("p",[e("img",{attrs:{src:s(432),alt:"ESflow"}})])])]),a._v(" "),e("p",[a._v("最後來看一下官方部落格上面的論述(2013年，所有還有Type的概念)")]),a._v(" "),e("blockquote",[e("p",[a._v("The easiest and most familiar layout clones what you would expect from a relational database."),e("br"),a._v("\nYou can (very roughly) think of an index like a database."),e("br"),a._v("\n● MySQL => Databases => Tables => Columns/Rows"),e("br"),a._v("\n● Elasticsearch => Indices => Types => Documents with Properties")])]),a._v(" "),e("p",[a._v("Elasticsearch 一詞拆開來看就是 Elastic + Search，"),e("br"),a._v("\nElastic 有靈活的意思；Search 則是搜尋，"),e("br"),a._v("\n為了讓使用者能靈活搜尋，Elasticsearch 在一些格式定義上相對靈活，"),e("br"),a._v('\n不過要百分之百發揮 Elasticsearch 的搜尋速度還是建議將 "需搜尋的欄位" 的定義給確定下來'),e("br"),a._v("\n不然官方就不會有文件是專門闡述 Mapping 這個部份了"),e("br"),a._v(" "),e("br"),a._v("\n另一個 Elasticsearch 與 RDBMS 的巨大差異就是 "),e("font",{attrs:{color:"#FF0000"}},[a._v("Elasticsearch 不具備 Transaction 的概念")]),a._v("，"),e("br"),a._v("\n但單個請求下是保有 ACID 特性，雖然講起來好像有點矛盾!?"),e("br"),a._v("\n不過實際使用過 Elasticsearch API 之後，就會有比較深刻的了解 (前提是必須了解RDBMS ACID And Transaction)"),e("br"),a._v(" "),e("br"),a._v("\n所以在真實的應用場景下 Elasticsearch 不會取代 RDBMS，反而是兩者併行相輔相成，"),e("br"),a._v("\nRDBMS 負責插入與更新資料，再把資料同步到 Elasticsearch 進行搜索。")],1),a._v(" "),e("h2",{attrs:{id:"index"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#index"}},[a._v("#")]),a._v(" Index")]),a._v(" "),e("p",[a._v("Index (索引)為 Elasticsearch 的核心概念之一，"),e("br"),a._v("\n核心三要之一便是 "),e("code",[a._v("Data in : documents and indices")]),a._v("，"),e("br"),a._v("\n當資料往 Elasticsearch 輸入時，兩個關鍵便是 "),e("strong",[a._v("documents")]),a._v(" and "),e("strong",[a._v("indices")]),a._v("，"),e("br"),a._v("\n若是說"),e("font",{attrs:{color:"#FF0000"}},[a._v("搜尋引擎為 Elasticsearch 的核心概念，Index 就是支撐這個核心概念的基石")]),a._v("，"),e("br"),a._v('\n若要在 ELK Stack 相關應用上有良好的使用體驗，務必要掌握一下 Index\n自身的心得是 Elasticsearch Index 這個東西"極端神秘"')],1),a._v(" "),e("ul",[e("li",[a._v("索引為文件的集合，簡單來說就是把同類型的 documents 藉由 Index 集合再一起，"),e("br"),a._v("\n當然索引的設計牽涉到整體搜尋的速度，假設把系統中所有的 documents 都用一個 Index 存起來"),e("br"),a._v("\n想當然爾...")]),a._v(" "),e("li",[a._v("而一個 Elasticsearch Index 又會分布在一個或多個 Shard 中，而每一個 Shard 又會有自身的 Lucene Index")]),a._v(" "),e("li",[a._v("Inverted Index")])]),a._v(" "),e("p",[e("s",[a._v("這小節有點難寫.. 先擱置一下")])]),a._v(" "),e("h3",{attrs:{id:"inverted-index"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#inverted-index"}},[a._v("#")]),a._v(" Inverted Index")]),a._v(" "),e("p",[a._v("反向索引或稱倒排索引")]),a._v(" "),e("h2",{attrs:{id:"document"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#document"}},[a._v("#")]),a._v(" Document")]),a._v(" "),e("h2",{attrs:{id:"field"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#field"}},[a._v("#")]),a._v(" Field")]),a._v(" "),e("h2",{attrs:{id:"mapping"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mapping"}},[a._v("#")]),a._v(" Mapping")]),a._v(" "),e("h2",{attrs:{id:"cluster"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cluster"}},[a._v("#")]),a._v(" Cluster")]),a._v(" "),e("h2",{attrs:{id:"shard"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#shard"}},[a._v("#")]),a._v(" Shard")]),a._v(" "),e("h2",{attrs:{id:"replica"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#replica"}},[a._v("#")]),a._v(" Replica")])])}),[],!1,null,null,null);t.default=r.exports}}]);